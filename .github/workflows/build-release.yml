name: Build Docker Image (Release)

on:
  push:
    # trigger on version tag push
    tags:
      - "v*"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Run Snyk to check for vulnerabilities
      #   uses: snyk/actions/golang@master
      #   continue-on-error: true
      #   env:
      #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #   with:
      #     args: --sarif-file-output=snyk.sarif

      # - name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: snyk.sarif

      # - name: Run golangci-lint
      #   uses: golangci/golangci-lint-action@v3.1.0

      - name: Get Tag Version
        id: get_version
        run: |
          export TRUNCATED_GITHUB_SHA=$(echo ${{ github.sha }} | cut -c1-7);
          echo "VERSION=${GITHUB_REF/refs\/tags\//}+${TRUNCATED_GITHUB_SHA}" >> $GITHUB_ENV
          echo "GIT_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/penguin-statistics/backend-next
          tags: |
            type=semver,pattern=v{{version}}
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=auto
      
      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: prod
          version: ${{ env.VERSION }}

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
