name: Build Docker Image (Release)

on:
  push:
    # trigger on version tag push
    tags:
      - "v*"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Go: Setup Cache Paths"
        id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"
      
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "Get Tag Version"
        id: get_version
        run: |
          export TRUNCATED_GITHUB_SHA=$(echo ${{ github.sha }} | cut -c1-7);
          echo "VERSION=${GITHUB_REF/refs\/tags\//}+${TRUNCATED_GITHUB_SHA}" >> $GITHUB_ENV
      
      # https://markphelps.me/posts/speed-up-your-go-builds-with-actions-cache/
      # Cache go build cache, used to speedup compiles
      - name: "Go: Cache: Builds"
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup downloads
      - name: "Go: Cache: Modules"
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
      
      - name: "Docker: Login to GitHub Container Registry"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Docker: Metadata"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/penguin-statistics/backend-next
          tags: |
            type=semver,pattern=v{{version}}
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=auto
      
      - name: "Docker: Build and Push Image"
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ env.VERSION }}

      - name: "Sentry: Create Release"
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: prod
          version: ${{ env.VERSION }}

      - name: "GitHub: Create Repository Release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
